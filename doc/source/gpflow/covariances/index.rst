==================
gpflow.covariances
==================

.. THIS IS AN AUTOGENERATED RST FILE
.. GENERATED BY `generate_rst.py`
.. DATE: 14/12/21



gpflow.covariances.Kuf
----------------------

This function uses multiple dispatch, which will depend on the type of argument passed in:


.. code-block:: python

    gpflow.covariances.Kuf( InducingPoints, Kernel, object )
    # dispatch to -> gpflow.covariances.kufs.Kuf_kernel_inducingpoints(...)


.. autofunction:: gpflow.covariances.kufs.Kuf_kernel_inducingpoints


.. code-block:: python

    gpflow.covariances.Kuf( Multiscale, SquaredExponential, object )
    # dispatch to -> gpflow.covariances.kufs.Kuf_sqexp_multiscale(...)


.. autofunction:: gpflow.covariances.kufs.Kuf_sqexp_multiscale


.. code-block:: python

    gpflow.covariances.Kuf( InducingPatches, Convolutional, object )
    # dispatch to -> gpflow.covariances.kufs.Kuf_conv_patch(...)


.. autofunction:: gpflow.covariances.kufs.Kuf_conv_patch


.. code-block:: python

    gpflow.covariances.Kuf( InducingPoints, MultioutputKernel, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( SharedIndependentInducingVariables, SharedIndependent, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( SeparateIndependentInducingVariables, SharedIndependent, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( SharedIndependentInducingVariables, SeparateIndependent, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( SeparateIndependentInducingVariables, SeparateIndependent, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( FallbackSeparateIndependentInducingVariables, LinearCoregionalization, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( FallbackSharedIndependentInducingVariables, LinearCoregionalization, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( SharedIndependentInducingVariables, LinearCoregionalization, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf


.. code-block:: python

    gpflow.covariances.Kuf( SeparateIndependentInducingVariables, LinearCoregionalization, object )
    # dispatch to -> gpflow.covariances.multioutput.kufs._Kuf(...)


.. autofunction:: gpflow.covariances.multioutput.kufs._Kuf



gpflow.covariances.Kuu
----------------------

This function uses multiple dispatch, which will depend on the type of argument passed in:


.. code-block:: python

    gpflow.covariances.Kuu( InducingPoints, Kernel )
    # dispatch to -> gpflow.covariances.kuus.Kuu_kernel_inducingpoints(...)


.. autofunction:: gpflow.covariances.kuus.Kuu_kernel_inducingpoints


.. code-block:: python

    gpflow.covariances.Kuu( Multiscale, SquaredExponential )
    # dispatch to -> gpflow.covariances.kuus.Kuu_sqexp_multiscale(...)


.. autofunction:: gpflow.covariances.kuus.Kuu_sqexp_multiscale


.. code-block:: python

    gpflow.covariances.Kuu( InducingPatches, Convolutional )
    # dispatch to -> gpflow.covariances.kuus.Kuu_conv_patch(...)


.. autofunction:: gpflow.covariances.kuus.Kuu_conv_patch


.. code-block:: python

    gpflow.covariances.Kuu( InducingPoints, MultioutputKernel )
    # dispatch to -> gpflow.covariances.multioutput.kuus._Kuu(...)


.. autofunction:: gpflow.covariances.multioutput.kuus._Kuu


.. code-block:: python

    gpflow.covariances.Kuu( FallbackSharedIndependentInducingVariables, SharedIndependent )
    # dispatch to -> gpflow.covariances.multioutput.kuus._Kuu(...)


.. autofunction:: gpflow.covariances.multioutput.kuus._Kuu


.. code-block:: python

    gpflow.covariances.Kuu( FallbackSharedIndependentInducingVariables, SeparateIndependent )
    # dispatch to -> gpflow.covariances.multioutput.kuus._Kuu(...)


.. autofunction:: gpflow.covariances.multioutput.kuus._Kuu


.. code-block:: python

    gpflow.covariances.Kuu( FallbackSharedIndependentInducingVariables, IndependentLatent )
    # dispatch to -> gpflow.covariances.multioutput.kuus._Kuu(...)


.. autofunction:: gpflow.covariances.multioutput.kuus._Kuu


.. code-block:: python

    gpflow.covariances.Kuu( FallbackSeparateIndependentInducingVariables, SharedIndependent )
    # dispatch to -> gpflow.covariances.multioutput.kuus._Kuu(...)


.. autofunction:: gpflow.covariances.multioutput.kuus._Kuu


.. code-block:: python

    gpflow.covariances.Kuu( FallbackSeparateIndependentInducingVariables, SeparateIndependent )
    # dispatch to -> gpflow.covariances.multioutput.kuus._Kuu(...)


.. autofunction:: gpflow.covariances.multioutput.kuus._Kuu


.. code-block:: python

    gpflow.covariances.Kuu( FallbackSeparateIndependentInducingVariables, LinearCoregionalization )
    # dispatch to -> gpflow.covariances.multioutput.kuus._Kuu(...)


.. autofunction:: gpflow.covariances.multioutput.kuus._Kuu



gpflow.covariances.kufs
-----------------------
.. automodule:: gpflow.covariances.kufs
.. toctree::
   :maxdepth: 1

   kufs/index


gpflow.covariances.kuus
-----------------------
.. automodule:: gpflow.covariances.kuus
.. toctree::
   :maxdepth: 1

   kuus/index


gpflow.covariances.multioutput
------------------------------
.. automodule:: gpflow.covariances.multioutput
.. toctree::
   :maxdepth: 1

   multioutput/index

